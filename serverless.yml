service: mymessages-api
frameworkVersion: "3"

custom:
  serverless-offline:
    httpPort: 4000
    websocketPort: 4001
    lambdaPort: 4002
  DB_NAME: mymessagesdbdev
  USERNAME: ${file(./db_secrets.json):USERNAME}
  PASSWORD: ${file(./db_secrets.json):PASSWORD}
  POSTGRESQL:
    HOST:
      Fn::GetAtt: [PostgreSqlRDSInstance, Endpoint.Address]
    PORT:
      Fn::GetAtt: [PostgreSqlRDSInstance, Endpoint.Port]

provider:
  name: aws
  runtime: nodejs14.x
  profile: "MyMessages-Admin"

  iam:
    role: LambdaRole

functions:
  api:
    handler: src/api.handler
    events:
      - httpApi: "*"

resources:
  Resources:
    LambdaRole: ${file(./resource/LambdaRole.yml)}
    PostgreSqlRDSInstance:
      Type: AWS::RDS::DBInstance
      Properties:
        MasterUsername: ${self:custom.USERNAME}
        MasterUserPassword: ${self:custom.PASSWORD}
        AllocatedStorage: 20
        DBName: ${self:custom.DB_NAME}
        DBInstanceClass: db.t3.micro
        # DBSubnetGroupName:
        #   Ref: ServerlessSubnetGroup
        Engine: postgres
        PubliclyAccessible: true


plugins:
  - serverless-dynamodb-local
  - serverless-offline
